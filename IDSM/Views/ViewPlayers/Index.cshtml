@using IDSM.Helpers
@model IDSM.Model.ViewModels.ActiveTeamsViewModel
@{
    ViewBag.Title = "ViewPlayers";
}

<div id="activegames">
<h3>Your Active Games</h3>
    <p>
        @(Model.ActiveTeams
            .Each(@<a href="~/ViewPlayers/@item.UserTeamId?userId=@item.UserId&gameId=@item.GameId" class="buttonId currentplayer" data-userteamid="@item.UserTeamId" data-footballclub="" data-searchstring="">@item.GameName</a>)
            .Else(
                @<div class="playerRow">
                    <b>No active games</b>
                </div>
            )
        )
    </p>
</div>

<div id="gameheading">
<h2>Game: @Model.TeamOverView.GameName</h2>
</div>

<div id="testBanter"></div>

<div id="leftcol">
    <div id="chosenplayers">
        @{ Html.RenderPartial("chosenplayers", Model.TeamOverView); }
    </div>
    <div id="searchform">
        @{ Html.RenderPartial("searchform", Model.TeamOverView); }
    </div>
    <div id="playerlist">
        @{ Html.RenderPartial("playerlist", Model.TeamOverView); }
    </div>
</div>

<div id="rightcol">
    <div id="chat">
        @{ Html.RenderPartial("chat", Model.TeamOverView.Banters); } 
    </div>
    <div id="banterlist">
        @{ Html.RenderPartial("banterlist", Model.TeamOverView.Banters); }
    </div>
</div>


@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.1.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.--> 
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.  
            var chat = $.connection.banter;
            // Create a function that the hub can call back to display messages.
            //chat.client.addNewBanterToPage = function (name, message) {
                chat.client.addNewBanterToPage = function (message) {
                // Add the message to the page. 
                //$('#discussion').append('<li><strong>' + htmlEncode(name)
                //+ '</strong>: ' + htmlEncode(message) + '</li>');
                    $('#banterlist').html(message);
                };
                chat.client.testAdd = function (message, gameId) {
                    // Add the message to the page. 
                    //$('#discussion').append('<li><strong>' + htmlEncode(name)
                    //+ '</strong>: ' + htmlEncode(message) + '</li>');
                    if (gameId ==  "@Model.TeamOverView.GameId" ) {
                        $('#testBanter').html(message);
                    }
                };
            //chat.client.addNewPlayerListToPage = function (playerListHtml) {
                chat.client.addNewPlayerListToPage = function (playerListHtml, gameId) {
                    // Add the message to the page. 
                    //$('#discussion').append('<li><strong>' + htmlEncode(name)
                    //+ '</strong>: ' + htmlEncode(message) + '</li>');
                    if (gameId == "@Model.TeamOverView.GameId") {
                        $('#playerlist').html(playerListHtml);
                        
                        $.connection.hub.start().done(function () {
                            
                            $('.addItem').click(function () {
                                alert("alert2");
                                var gameId2 = $(this).data('gameid');
                                var userId = $(this).data('userid');
                                var userTeamId = $(this).data('userteamid');
                                var playerId = $(this).data('playerid');

                                // Call the Send method on the hub. 
                                //chat.server.send($('#displayname').val(), $('#message').val());
                                //(int playerId, int userTeamId, int gameId, int userId)
                                // chat.server.addPlayer(playerId, userTeamId, gameId, userId, "@Context.User.Identity.Name");
                    chat.server.addPlayer(playerId, userTeamId, gameId2, userId);
                    // Clear text box and reset focus for next comment. 
                    //$('#message').val('').focus();
                });

                        });
                        
                    }
                };
                chat.client.addNewSearchFormToPage = function (searchFormHtml, gameId) {
                    // Add the message to the page. 
                    //$('#discussion').append('<li><strong>' + htmlEncode(name)
                    //+ '</strong>: ' + htmlEncode(message) + '</li>');
                    if (gameId == "@Model.TeamOverView.GameId") {
                        $('#searchform').html(searchFormHtml);

                    }
                };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.  
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function() {
                    // Call the Send method on the hub. 
                    //chat.server.send($('#displayname').val(), $('#message').val());
                    chat.server.send($('#message').val(), $('#gameId').val(), $('#userTeamId').val(), "@Context.User.Identity.Name" );
                    // Clear text box and reset focus for next comment. 
                    $('#message').val('').focus();
                });
                $('#message').keypress(function (e) {
                    if (e.which == 13) {//Enter key pressed
                        $('#sendmessage').click();//Trigger search button click event
                    }
                });
                $('.addItem').click(function () {
                    alert("alert1");
                     var gameId = $(this).data('gameid');
                    var userId = $(this).data('userid');
                    var userTeamId = $(this).data('userteamid');
                    var playerId = $(this).data('playerid');

                    // Call the Send method on the hub. 
                    //chat.server.send($('#displayname').val(), $('#message').val());
                    //(int playerId, int userTeamId, int gameId, int userId)
                   // chat.server.addPlayer(playerId, userTeamId, gameId, userId, "@Context.User.Identity.Name");
                    chat.server.addPlayer(playerId, userTeamId, gameId, userId);
                    // Clear text box and reset focus for next comment. 
                    //$('#message').val('').focus();
                });

            });
        });
        // This optional function html-encodes messages for display in the page.

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>

}