@model IDSM.Model.ViewModels.TeamOverViewViewModel
@using IDSM.Helpers

        <script src="~/Scripts/jquery-2.1.0.js"></script>
        <script src="~/Scripts/jquery-ui-1.10.1.js"></script>
        <script src="~/Scripts/jquery.ui.dialog.js"></script>
        <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<div style="float: left; width: 50%;">
            <h2>@Model.UserName's team for the game <i>@Model.GameName</i></h2>

    <div id="dialog-confirm" title="Add Player?">
        <p><span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>Do you want to add this player?</p>
    </div>
    
    @using (Html.BeginForm("Index", "ViewPlayers", FormMethod.Post))
            {
                if (!Model.HasEnded)
                {
                    <div id="ChosenPlayerRows">
                        @(Model.PlayersChosen
                              .Each(@<div class="playerRow">@Html.Partial("~/Views/ViewPlayers/ChosenPlayerRow.cshtml", item)</div>)
                              .Else(
                                  @<div class="playerRow">
                                       <b>No Players Chosen Yet</b>
                                   </div>
                              )
                              )
        
                    </div>
                }
                <input type="hidden" name="GameID" value="@Model.GameId" />
                <input type="hidden" name="UserTeamID" value="@Model.UserTeamId" />
            }
    

    @if (Model.GameCurrentOrderPosition != Model.UserTeamOrderPosition)
    {
                <p>Model.AddedPlayerMessage</p>
    }
    else
    {

        <h2>List of Footballers</h2>
        // don't know why but this doesn't work (loads data into whole page rather than the div)
        //using (Html.BeginForm("TeamOverView", "ViewPlayers", FormMethod.Post, new { id = "filterPlayers" }))
        using (Ajax.BeginForm("TeamOverView", "ViewPlayers", new AjaxOptions
        {
            HttpMethod = "POST",
            UpdateTargetId = "teamtest",
            InsertionMode = InsertionMode.Replace
            
        }))
       {
                    <p> 
                        @Html.DropDownListFor(x => x.Clubs, new SelectList(Model.Clubs, "Value", "Text"), "All")
                        Name: @Html.TextBox("searchString") 
                        <input type="hidden" name="userTeamID" value="@Model.UserTeamId" />
                        <input type="submit" value="Filter" /></p>
       }
                <table>
                    @foreach (var item in Model.PlayersSearchedFor)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Club)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Position)
                            </td>        
                            <td>
                                @if (!item.HasBeenChosen)
                                {
                                    @Html.ActionLink("Add to team", "AddPlayer", new { playerId = item.Id, userteamid = Model.UserTeamId, gameid = Model.GameId, userId = Model.UserId }, new { @class = "addItem" })
                                }
                            </td>
                        </tr>
                    }</table>
    }
        </div>

        <div style="float: left; width: 50%;">
    
            <h2>BANTER</h2>
    
            @using (Html.BeginForm("AddBanter", "ViewPlayers", FormMethod.Post))
            {
                <p>banter: @Html.TextBox("Banter") 
                    <input type="hidden" name="userTeamId" value="@Model.UserTeamId" />
                    <input type="submit" value="post banter" /></p>
            }
    
            <h2>List of Banter</h2>
            <table>
                @foreach (var item in Model.Banters)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.BanterText)
                        </td>
                    </tr>
                }</table>        
        </div>
<script type="text/javascript">
    var returnSelectTeam = function () {
        debugger;
        $.ajax({
            type: 'POST',
            url: '/ViewPlayers/TeamOverView',
            data: $("#filterPlayers").serialize(),
            success: function (data) {
                $('#teamtest').empty();
                $('#teamtest').append(data);
            }
        });
    };

    //$('#filterPlayers').submit(function () {
    //    returnSelectTeam();
    //});
</script>
<script type="text/javascript">
    var addLinkObj;

    $(function () {
        $("#dialog-confirm").dialog({
            autoOpen: false,
            resizable: false,
            height: 140,
            modal: true,
            buttons: {
                "Are you sure you want to add this player?": function () {
                    var path = $(this).data('link').href;
                    $.ajax({
                        url: path,
                        cache: false,
                        success: function (data) { return true; }
                    });
                    $(this).hide();
                    $(this).dialog("close");
                    addLinkObj.hide();
                    return true;
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    });

    $(document).ready(function () {

        $(".addItem").click(function (event) {
            addLinkObj = $(this);
            $("#dialog-confirm")
                .data('link', this)
                .dialog("open");
        });
    });

    $(document).on("click", "a.deleteRow", function () {
        $(this).parents("div.playerRow:first").remove();
        return false;
    });

</script>
